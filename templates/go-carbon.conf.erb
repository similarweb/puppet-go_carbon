# ------ THIS FILE IS MANAGED BY PUPPET ------ #

[common]
# Run as user. Works only in daemon mode
user = "<%= @user %>"
# If logfile is empty use stderr
logfile = "<%= @log_file %>"
# Logging error level. Valid values: "debug", "info", "warn", "warning", "error"
log-level = "<%= @log_level %>"
# Prefix for store all internal go-carbon graphs. Supported macroses: {host}
graph-prefix = "<%= @internal_graph_prefix %>"
# Interval of storing internal metrics. Like CARBON_METRIC_INTERVAL
metric-interval = "<%= @internal_metrics_interval %>"
# Increase for configuration with multi persisters
max-cpu = <%= @max_cpu %>

[whisper]
data-dir = "<%= @whisper_data_dir %>"
# http://graphite.readthedocs.org/en/latest/config-carbon.html#storage-schemas-conf. Required
schemas-file = "<%= @whisper_schemas_file %>"
# http://graphite.readthedocs.org/en/latest/config-carbon.html#storage-aggregation-conf. Optional
aggregation-file = "<%= @whisper_aggregation_file %>"
# Workers count. Metrics sharded by "crc32(metricName) % workers"
workers = <%= @whisper_workers %>
# Limits the number of whisper update_many() calls per second. 0 - no limit
max-updates-per-second = <%= @whisper_max_updates_per_second %>
sparse-create = <%= @whisper_sparse_create %>
enabled = <%= @whisper_enabled %>

[cache]
# Limit of in-memory stored points (not metrics)
max-size = <%= @cache_max_size %>
# Capacity of queue between receivers and cache
input-buffer = <%= @cache_input_buffer %>
# Capacity of queue between receivers and cache
# Strategy to persist metrics. Values: "max","sorted","noop"
#   "max" - write metrics with most unwritten datapoints first
#   "sorted" - sort by timestamp of first unwritten datapoint.
#   "noop" - pick metrics to write in unspecified order,
#            requires least CPU and improves cache responsiveness
write-strategy = "<%= @cache_write_strategy %>"

[udp]
listen = "<%= @udp_listen %>"
enabled = <%= @udp_enabled %>
# Enable optional logging of incomplete messages (chunked by MTU)
log-incomplete = <%= @udp_log_incomplete  %>

[tcp]
listen = "<%= @tcp_listen %>"
enabled = <%= @tcp_enabled %>

[pickle]
listen = "<%= @pickle_listen %>"
enabled = <%= @pickle_enabled %>
# Limit message size for prevent memory overflow
max-message-size = <%= @pickle_max_message_size %>

[carbonlink]
listen = "<%= @carbonlink_listen %>"
enabled = <%= @carbonlink_enabled %>
# Close inactive connections after "read-timeout"
read-timeout = "<%= @carbonlink_read_timeout %>"
# Return empty result if cache not reply
query-timeout = "<%= @carbonlink_query_timeout %>"

[pprof]
listen = "<%= @pprof_listen %>"
enabled = <%= @pprof_enabled %>

[carbonserver]
listen = "<%= @carbonserver_listen %>"
# Carbonserver support is still experimental and may contain bugs
# Or be incompatible with github.com/grobian/carbonserver
enabled = <%= @carbonserver_enabled %>
# Buckets to track response times
buckets = <%= @carbonserver_buckets %>
# Maximum amount of globs in a single metric
max-globs = <%= @carbonserver_max_globs %>
# carbonserver-specific metrics will be sent as counters
# For compatibility with grobian/carbonserver
metrics-as-counters = <%= @carbonserver_metrics_as_counters %>
# Read and Write timeouts for HTTP server
read-timeout = "<%= @carbonserver_read_timeout %>"
write-timeout = "<%= @carbonserver_write_timeout %>"
# carbonserver keeps track of all available whisper files
# in memory. This determines how often it will check FS
# for new metrics.
scan-frequency = "<%= @carbonserver_scan_frequency %>"

[dump]
# Enable dump/restore function on USR2 signal
enabled = <%= @dump_enabled %>
# Directory for store dump data. Should be writeable for carbon
path = "<%= @dump_path %>"
# Restore speed. 0 - unlimited
restore-per-second = <%= @dump_restore_per_second %>
